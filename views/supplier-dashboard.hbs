{{!-- <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Restaurant Supplier Dashboard</title>

  <!-- FontAwesome CDN for icons -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  />

  <style>
    /* Basic resets and container */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      background-color: #f8f9fa;
      color: #333;
    }
    .container {
      display: flex;
      min-height: 100vh;
    }

    /* Sidebar */
    .sidebar {
      width: 220px;
      background-color: #264653;
      color: white;
      padding: 20px;
      box-sizing: border-box;
    }
    .sidebar .logo h1 {
      font-size: 1.5rem;
      margin-bottom: 30px;
    }
    .sidebar .nav-links li {
      list-style: none;
      margin-bottom: 15px;
    }
    .sidebar .nav-links li a {
      color: white;
      text-decoration: none;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .sidebar .nav-links li a.active,
    .sidebar .nav-links li a:hover {
      color: #2a9d8f;
    }

    /* Main content */
    .main-content {
      flex-grow: 1;
      padding: 20px 30px;
      box-sizing: border-box;
      background-color: white;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }
    .header h1 {
      margin: 0;
      font-size: 2rem;
      color: #264653;
    }
    .user-info {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .user-info img {
      border-radius: 50%;
      width: 50px;
      height: 50px;
    }
    .user-info strong {
      display: block;
      font-size: 1.1rem;
      color: #264653;
    }
    .user-info p {
      margin: 0;
      font-size: 0.9rem;
      color: #6c757d;
    }

    /* Stats Section */
    .stats-container {
      display: flex;
      gap: 20px;
      margin-bottom: 40px;
    }
    .stat-card {
      background-color: #2a9d8f;
      color: white;
      flex: 1;
      padding: 20px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      gap: 15px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    .stat-icon {
      font-size: 2.5rem;
    }
    .stat-icon.products { color: #e76f51; }
    .stat-icon.orders { color: #f4a261; }
    .stat-icon.revenue { color: #e9c46a; }
    .stat-info h3 {
      margin: 0;
      font-size: 1.8rem;
    }
    .stat-info p {
      margin: 0;
      font-weight: 600;
      letter-spacing: 0.05em;
    }

    /* Section Headers */
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      border-bottom: 2px solid #2a9d8f;
      padding-bottom: 5px;
    }
    .section-header h2 {
      margin: 0;
      color: #264653;
    }
    .btn {
      cursor: pointer;
      padding: 8px 14px;
      border: none;
      border-radius: 4px;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 6px;
      transition: background-color 0.3s ease;
    }
    .btn-primary {
      background-color: #2a9d8f;
      color: white;
    }
    .btn-primary:hover {
      background-color: #264653;
    }
    .btn-outline {
      background-color: transparent;
      border: 2px solid #2a9d8f;
      color: #2a9d8f;
    }
    .btn-outline:hover {
      background-color: #2a9d8f;
      color: white;
    }

    /* Product Form */
    #productForm {
      background-color: #f1f1f1;
      padding: 20px;
      border-radius: 6px;
      margin-bottom: 30px;
      display: none;
    }
    #productForm h3 {
      margin-top: 0;
      color: #264653;
    }
    .form-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      margin-bottom: 20px;
    }
    .form-group label {
      display: block;
      margin-bottom: 6px;
      font-weight: 600;
      color: #264653;
    }
    .form-group input,
    .form-group select {
      width: 100%;
      padding: 8px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
      font-size: 1rem;
      box-sizing: border-box;
    }
    .form-actions {
      display: flex;
      justify-content: flex-end;
      gap: 15px;
    }

    /* Product Table */
    #productTable {
      width: 100%;
      border-collapse: collapse;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      border-radius: 6px;
      overflow: hidden;
    }
    #productTable th,
    #productTable td {
      border: 1px solid #ddd;
      padding: 12px 15px;
      text-align: left;
      background-color: white;
    }
    #productTable th {
      background-color: #2a9d8f;
      color: white;
      font-weight: 600;
    }
    #productTable tbody tr:hover {
      background-color: #f9f9f9;
    }

    /* Responsive adjustments */
    @media (max-width: 600px) {
      .stats-container {
        flex-direction: column;
      }
      .form-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Sidebar -->
    <div class="sidebar">
      <div class="logo">
        <h1><i class="fas fa-utensils"></i> RestaurantHub</h1>
      </div>
      <ul class="nav-links">
        <li><a href="#" class="active"><i class="fas fa-home"></i> Dashboard</a></li>
      </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
      <div class="header">
        <h1>Restaurant Supplier Dashboard</h1>
        <div class="user-info">
          <img
            src="https://ui-avatars.com/api/?name=John+Doe&background=2a9d8f&color=fff"
            alt="User"
          />
          <div>
            <strong>John Doe</strong>
            <p>Supplier</p>
          </div>
        </div>
      </div>

      <!-- Stats Section -->
      <div class="stats-container">
        <div class="stat-card">
          <div class="stat-icon products"><i class="fas fa-carrot"></i></div>
          <div class="stat-info">
            <h3 id="productCount">0</h3>
            <p>Total Products</p>
          </div>
        </div>
        <div class="stat-card">
          <div class="stat-icon orders"><i class="fas fa-shopping-cart"></i></div>
          <div class="stat-info">
            <h3 id="orderCount">0</h3>
            <p>New Orders</p>
          </div>
        </div>
        <div class="stat-card">
          <div class="stat-icon revenue"><i class="fas fa-rupee-sign"></i></div>
          <div class="stat-info">
            <h3 id="revenueCount">₹0</h3>
            <p>Revenue</p>
          </div>
        </div>
      </div>

      <!-- Product Section -->
      <div class="section-header">
        <h2>My Products</h2>
        <button id="addProductBtn" class="btn btn-primary">
          <i class="fas fa-plus"></i> Add Product
        </button>
      </div>

      <!-- Product Form -->
      <div id="productForm">
        <h3>Add New Product</h3>
        <form id="productFormElement">
          <div class="form-grid">
            <div class="form-group">
              <label for="productName">Product Name</label>
              <input
                type="text"
                id="productName"
                required
                placeholder="Enter product name"
              />
            </div>
            <div class="form-group">
              <label for="productCategory">Category</label>
              <select id="productCategory" required>
                <option value="">Select category</option>
                <option value="vegetable">Vegetable</option>
                <option value="spice">Spice</option>
                <option value="dairy">Dairy</option>
                <option value="meat">Meat</option>
                <option value="other">Other</option>
              </select>
            </div>
            <div class="form-group">
              <label for="productPrice">Price (₹)</label>
              <input
                type="number"
                id="productPrice"
                step="0.01"
                min="0"
                required
                placeholder="0.00"
              />
            </div>
            <div class="form-group">
              <label for="productQuantity">Quantity (kg/lbs)</label>
              <input
                type="number"
                id="productQuantity"
                min="0"
                required
                placeholder="Enter quantity"
              />
            </div>
          </div>
          <div class="form-actions">
            <button type="button" id="cancelProductBtn" class="btn btn-outline">
              Cancel
            </button>
            <button type="submit" class="btn btn-primary">Save Product</button>
          </div>
        </form>
      </div>

      <!-- Products Table -->
      <div id="productsContainer" class="items-grid">
        <table id="productTable">
          <thead>
            <tr>
              <th>Name</th>
              <th>Category</th>
              <th>Price (₹)</th>
              <th>Quantity</th>
            </tr>
          </thead>
          <tbody>
            <!-- Products will be appended here -->
          </tbody>
        </table>
      </div>

      <!-- Orders Section -->
      <div class="section-header" style="margin-top: 40px;">
        <h2>Restaurant Orders</h2>
      </div>
      <div id="ordersContainer" class="items-grid">
        <!-- Orders will be dynamically added here -->
        <p>No orders yet.</p>
      </div>
    </div>
  </div>

  <script>
    // Select DOM elements
    const addProductBtn = document.getElementById("addProductBtn");
    const productForm = document.getElementById("productForm");
    const cancelProductBtn = document.getElementById("cancelProductBtn");
    const productFormElement = document.getElementById("productFormElement");
    const productTableBody = document.querySelector("#productTable tbody");
    const productCountEl = document.getElementById("productCount");

    let products = [];

    // Show form when Add Product button clicked
    addProductBtn.addEventListener("click", () => {
      productForm.style.display = "block";
      addProductBtn.style.display = "none";
    });

    // Hide form when Cancel button clicked
    cancelProductBtn.addEventListener("click", () => {
      productForm.style.display = "none";
      addProductBtn.style.display = "inline-flex";
      productFormElement.reset();
    });

    // Add product on form submit
    productFormElement.addEventListener("submit", (e) => {
      e.preventDefault();

      const newProduct = {
        name: document.getElementById("productName").value.trim(),
        category: document.getElementById("productCategory").value,
        price: parseFloat(document.getElementById("productPrice").value).toFixed(2),
        quantity: parseFloat(document.getElementById("productQuantity").value),
      };

      // Add product to products array
      products.push(newProduct);

      // Update table and stats
      appendProductToTable(newProduct);
      updateProductCount();

      // Reset and hide form
      productFormElement.reset();
      productForm.style.display = "none";
      addProductBtn.style.display = "inline-flex";
    });

    // Append product row to table
    function appendProductToTable(product) {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>${product.name}</td>
        <td>${capitalizeFirstLetter(product.category)}</td>
        <td>₹${product.price}</td>
        <td>${product.quantity}</td>
      `;
      productTableBody.appendChild(tr);
    }

    // Update product count in stats
    function updateProductCount() {
      productCountEl.textContent = products.length;
    }

    // Helper function to capitalize first letter
    function capitalizeFirstLetter(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    }
  </script>
</body>
</html> --}}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Restaurant Supplier Dashboard</title>

  <!-- FontAwesome CDN for icons -->
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  />

  <style>
    /* Basic resets and container */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      background-color: #f8f9fa;
      color: #333;
    }
    .container {
      display: flex;
      min-height: 100vh;
    }

    /* Sidebar */
    .sidebar {
      width: 220px;
      background-color: #264653;
      color: white;
      padding: 20px;
      box-sizing: border-box;
    }
    .sidebar .logo h1 {
      font-size: 1.5rem;
      margin-bottom: 30px;
    }
    .sidebar .nav-links li {
      list-style: none;
      margin-bottom: 15px;
    }
    .sidebar .nav-links li a {
      color: white;
      text-decoration: none;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .sidebar .nav-links li a.active,
    .sidebar .nav-links li a:hover {
      color: #2a9d8f;
    }

    /* Main content */
    .main-content {
      flex-grow: 1;
      padding: 20px 30px;
      box-sizing: border-box;
      background-color: white;
    }
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }
    .header h1 {
      margin: 0;
      font-size: 2rem;
      color: #264653;
    }
    .user-info {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .user-info img {
      border-radius: 50%;
      width: 50px;
      height: 50px;
    }
    .user-info strong {
      display: block;
      font-size: 1.1rem;
      color: #264653;
    }
    .user-info p {
      margin: 0;
      font-size: 0.9rem;
      color: #6c757d;
    }

    /* Stats Section */
    .stats-container {
      display: flex;
      gap: 20px;
      margin-bottom: 40px;
    }
    .stat-card {
      background-color: #2a9d8f;
      color: white;
      flex: 1;
      padding: 20px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      gap: 15px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    .stat-icon {
      font-size: 2.5rem;
    }
    .stat-icon.products { color: #e76f51; }
    .stat-icon.orders { color: #f4a261; }
    .stat-icon.revenue { color: #e9c46a; }
    .stat-info h3 {
      margin: 0;
      font-size: 1.8rem;
    }
    .stat-info p {
      margin: 0;
      font-weight: 600;
      letter-spacing: 0.05em;
    }

    /* Section Headers */
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      border-bottom: 2px solid #2a9d8f;
      padding-bottom: 5px;
    }
    .section-header h2 {
      margin: 0;
      color: #264653;
    }
    .btn {
      cursor: pointer;
      padding: 8px 14px;
      border: none;
      border-radius: 4px;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 6px;
      transition: background-color 0.3s ease;
    }
    .btn-primary {
      background-color: #2a9d8f;
      color: white;
    }
    .btn-primary:hover {
      background-color: #264653;
    }
    .btn-outline {
      background-color: transparent;
      border: 2px solid #2a9d8f;
      color: #2a9d8f;
    }
    .btn-outline:hover {
      background-color: #2a9d8f;
      color: white;
    }

    /* Product Form */
    #productForm {
      background-color: #f1f1f1;
      padding: 20px;
      border-radius: 6px;
      margin-bottom: 30px;
      display: none;
    }
    #productForm h3 {
      margin-top: 0;
      color: #264653;
    }
    .form-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
      margin-bottom: 20px;
    }
    .form-group label {
      display: block;
      margin-bottom: 6px;
      font-weight: 600;
      color: #264653;
    }
    .form-group input,
    .form-group select {
      width: 100%;
      padding: 8px 10px;
      border-radius: 4px;
      border: 1px solid #ccc;
      font-size: 1rem;
      box-sizing: border-box;
    }
    .form-actions {
      display: flex;
      justify-content: flex-end;
      gap: 15px;
    }

    /* Product Table */
    #productTable {
      width: 100%;
      border-collapse: collapse;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      border-radius: 6px;
      overflow: hidden;
    }
    #productTable th,
    #productTable td {
      border: 1px solid #ddd;
      padding: 12px 15px;
      text-align: left;
      background-color: white;
    }
    #productTable th {
      background-color: #2a9d8f;
      color: white;
      font-weight: 600;
    }
    #productTable tbody tr:hover {
      background-color: #f9f9f9;
    }

    /* Responsive adjustments */
    @media (max-width: 600px) {
      .stats-container {
        flex-direction: column;
      }
      .form-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Sidebar -->
    <div class="sidebar">
      <div class="logo">
        <h1><i class="fas fa-utensils"></i> RestaurantHub</h1>
      </div>
      <ul class="nav-links">
        <li><a href="#" class="active"><i class="fas fa-home"></i> Dashboard</a></li>
      </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
      <div class="header">
        <h1>Restaurant Supplier Dashboard</h1>
        <div class="user-info">
          <img
            src="https://ui-avatars.com/api/?name=John+Doe&background=2a9d8f&color=fff"
            alt="User"
          />
          <div>
            <strong>{{user.username}}</strong>
            <p>Supplier</p>
          </div>
        </div>
      </div>

      <!-- Stats Section -->
      <div class="stats-container">
        <div class="stat-card">
          <div class="stat-icon products"><i class="fas fa-carrot"></i></div>
          <div class="stat-info">
            <h3 id="productCount">0</h3>
            <p>Total Products</p>
          </div>
        </div>
        <div class="stat-card">
          <div class="stat-icon orders"><i class="fas fa-shopping-cart"></i></div>
          <div class="stat-info">
            <h3 id="orderCount">0</h3>
            <p>New Orders</p>
          </div>
        </div>
        <div class="stat-card">
          <div class="stat-icon revenue"><i class="fas fa-rupee-sign"></i></div>
          <div class="stat-info">
            <h3 id="revenueCount">₹0</h3>
            <p>Revenue</p>
          </div>
        </div>
      </div>

      <!-- Product Section -->
      <div class="section-header">
        <h2>My Products</h2>
        <button id="addProductBtn" class="btn btn-primary">
          <i class="fas fa-plus"></i> Add Product
        </button>
      </div>

      <!-- Product Form -->
      <div id="productForm" class="product-form">
        <h3>Add New Product</h3>
        <form id="productFormElement">
          <div class="form-grid">
            <div class="form-group">
              <label for="productName">Product Name</label>
              <input
                type="text"
                id="productName"
                required
                placeholder="Enter product name"
              />
            </div>
            <div class="form-group">
              <label for="productCategory">Category</label>
              <select id="productCategory" required>
                <option value="">Select category</option>
                <option value="vegetable">Vegetable</option>
                <option value="spice">Spice</option>
                <option value="dairy">Dairy</option>
                <option value="meat">Meat</option>
                <option value="other">Other</option>
              </select>
            </div>
            <div class="form-group">
              <label for="productPrice">Price (₹)</label>
              <input
                type="number"
                id="productPrice"
                step="0.01"
                min="0"
                required
                placeholder="0.00"
              />
            </div>
            <div class="form-group">
              <label for="productQuantity">Quantity (kg/lbs)</label>
              <input
                type="number"
                id="productQuantity"
                min="0"
                required
                placeholder="Enter quantity"
              />
            </div>
          </div>
          <div class="form-actions">
            <button type="button" id="cancelProductBtn" class="btn btn-outline">
              Cancel
            </button>
            <button type="submit" class="btn btn-primary">Save Product</button>
          </div>
        </form>
      </div>

      <!-- Products Table -->
      <div id="productsContainer" class="items-grid">
        <table id="productTable">
          <thead>
            <tr>
              <th>Name</th>
              <th>Category</th>
              <th>Price (₹)</th>
              <th>Quantity</th>
            </tr>
          </thead>
          <tbody>
            <!-- Products will be appended here -->
          </tbody>
        </table>
      </div>

      <!-- Orders Section -->
      <div class="section-header" style="margin-top: 40px;">
        <h2>Restaurant Orders</h2>
      </div>
      <div id="ordersContainer" class="items-grid">
        <!-- Orders will be dynamically added here -->
        <p>No orders yet.</p>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const productFormElement = document.getElementById("productFormElement");
      const addProductBtn = document.getElementById("addProductBtn");
      const productForm = document.getElementById("productForm");
      const cancelProductBtn = document.getElementById("cancelProductBtn");
      const productTableBody = document.querySelector("#productTable tbody");
      const productCount = document.getElementById("productCount");

      // Show the add product form
      addProductBtn.addEventListener("click", () => {
        productForm.style.display = "block";
        addProductBtn.style.display = "none";
      });

      // Cancel and hide the form
      cancelProductBtn.addEventListener("click", () => {
        productForm.style.display = "none";
        addProductBtn.style.display = "inline-flex";
        productFormElement.reset();
      });

      // Handle form submission
      productFormElement.addEventListener("submit", async function (e) {
        e.preventDefault();

        const name = document.getElementById("productName").value.trim();
        const category = document.getElementById("productCategory").value;
        const price = parseFloat(document.getElementById("productPrice").value);
        const quantity = parseInt(document.getElementById("productQuantity").value);

        const productData = { name, category, price, quantity };

        try {
          const response = await fetch("/api/products", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(productData),
          });

          const data = await response.json();

          if (response.ok && data.success) {
            appendProductToTable(data.product);
            productFormElement.reset();
            productForm.style.display = "none";
            addProductBtn.style.display = "inline-flex";
          } else {
            alert(data.error || "Failed to save product");
          }
        } catch (err) {
          console.error("Error:", err);
          alert("An error occurred while adding the product.");
        }
      });

      // Append a product row to the table
      function appendProductToTable(p) {
        const row = document.createElement("tr");

        row.innerHTML = `
            <td>${p.name}</td>
            <td>${capitalizeFirstLetter(p.category)}</td>
            <td>₹${p.price.toFixed(2)}</td>
            <td>${p.quantity}</td>
        `;

        productTableBody.appendChild(row);
        productCount.textContent =
          document.querySelectorAll("#productTable tbody tr").length;
      }

      function capitalizeFirstLetter(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
      }

      // Optional: Load existing products when page loads
      async function loadExistingProducts() {
        try {
          const res = await fetch("/api/products");
          const data = await res.json();

          if (res.ok) {
            data.products.forEach(appendProductToTable);
            productCount.textContent = data.products.length;
          } else {
            console.warn(data.error || "Failed to load products");
          }
        } catch (err) {
          console.error("Failed to fetch products:", err);
        }
      }

      loadExistingProducts();
    });
  </script>
</body>
</html>
